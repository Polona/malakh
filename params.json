{"name":"Malakh","tagline":"Deep zoom viewer. Research and development project requested by the National Library of Poland made by Laboratorium EE","body":"# Malakh - deep zoom viewer\r\n\r\nResearch and development project requested by the National Library of Poland made by Laboratorium EE.\r\n\r\n## How to run a viewer on your own image?\r\n\r\n### Generating DZI files\r\n\r\nFirst, prepare the environment:\r\n\r\n1. Get Python 2.7.\r\n2. Install the `libjpeg` development package with a system package manager, e.g. on OS X: `brew install libjpeg`, on Ubuntu: `sudo apt-get install libjpeg-dev`.\r\n3. Install the `Pillow` package: `sudo pip install Pillow` or `sudo easy_install Pillow`.\r\n\r\nNow, run:\r\n```bash\r\n./utils/deepzoom.py PATH_TO_THE_IMAGE_FILE\r\n```\r\n\r\n### Firing up the viewer\r\n\r\nFirst, construct a new Malakh object:\r\n```js\r\nvar malakh = new Malakh(containerSelectorOrElement, [configOverrides]);\r\n```\r\nwhere the first argument points to a container element (or its selector) where Malakh will create its components. The container will be emptied.\r\n\r\nFor example:\r\n```js\r\nvar malakh = new Malakh('#malakh_container');\r\n```\r\n\r\nThen, open an image:\r\n```js\r\nmalakh.openDzi({\r\n    imageDataUrl: PATH_TO_DZI,\r\n});\r\n```\r\n\r\nMalakh will automatically deduce the tiles directory path from the above. If this path is non-canonical, you can provide it as an additional argument:\r\n\r\n```js\r\nmalakh.openDzi({\r\n    imageDataUrl: PATH_TO_DZI,\r\n    tilesUrl: PATH_TO_TILES_DIRECTORY,\r\n});\r\n```\r\n\r\n## How to build your own Malakh\r\n\r\nFirst, clone a copy of the main Malakh git repo by running:\r\n\r\n```bash\r\ngit clone https://github.com/Polona/malakh.git\r\n```\r\n\r\nEnter the `malakh` directory and install the Node dependencies:\r\n\r\n```bash\r\ncd malakh && npm install\r\n```\r\n\r\nThe built version of Malakh will be put in the `dist/` subdirectory, along with the minified copy and an associated map file.\r\n\r\n### Customizing own Malakh version\r\n\r\nIf you want to build your own, modified version, the above process may last too long. In that case, install the `grunt-cli` package, this time globally, to have the `grunt` binary available:\r\n\r\n```bash\r\nnpm install -g grunt-cli\r\n```\r\n\r\nMake sure you have `grunt` installed by testing:\r\n\r\n```bash\r\ngrunt --version\r\n```\r\n\r\nThen, to get a complete, minified, linted version of Malakh, type the following:\r\n\r\n```bash\r\ngrunt\r\n```\r\n\r\nIf you don't want to build minified files (e.g. during development), run:\r\n```bash\r\ngrunt dev\r\n```\r\n\r\n### Modules\r\n\r\nSpecial builds can be created that optionally exclude or include any of the following modules:\r\n\r\n- magnifier\r\n- picker\r\n- markers\r\n\r\nMake sure all Node dependencies are installed and all Git submodules are checked out:\r\n\r\n```bash\r\nnpm install && grunt\r\n```\r\n\r\nTo create a custom build, use the following special `grunt` commands:\r\n\r\nExclude **magnifier**:\r\n\r\n```bash\r\ngrunt custom:-magnifier\r\n```\r\n\r\nThe same applies to other modules.\r\n\r\nExclude **all** optional modules:\r\n\r\n```bash\r\ngrunt custom:-magnifier,-picker,-markers\r\n```\r\n\r\nNote: dependencies will be handled internally, by the build process.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}